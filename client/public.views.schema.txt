create view public.details_associations as
select
  pra.role_specific_email,
  pra.loan_fund,
  pra.email_status,
  pra.who_initiated_tl_removal,
  pra.gsuite_roles,
  pra.currently_active,
  pra.school_id,
  pra.people_id,
  pra.id,
  pra.created_date,
  pra.start_date,
  pra.end_date,
  pra.role,
  pra.charter_id,
  pra.authorizer_id,
  ge.full_name,
  ge.has_montessori_cert,
  ge.race_ethnicity_display,
  gs.school_name,
  gs.stage_status,
  gs.membership_status,
  gs.projected_open,
  gs.all_ages_served,
  gs.governance_model
from
  people_roles_associations pra
  join grid_educator ge on pra.people_id = ge.id
  join grid_school gs on pra.school_id = gs.id;

create view public.details_charters as
select
  c.id,
  c.short_name,
  c.full_name,
  c.initial_target_geo,
  c.landscape_analysis,
  c.application,
  c.non_tl_roles,
  c.status,
  c.ein,
  c.incorp_date,
  c.current_fy_end,
  c.non_discrimination_policy_on_website,
  c.school_provided_1023,
  c.guidestar_listing_requested,
  c.partnership_with_wf,
  c.first_site_opened_date,
  c.website,
  c.nonprofit_status,
  c.initial_target_planes,
  cap.target_open,
  cap.support_timeline,
  cap.app_window,
  cap.key_dates,
  cap.milestones,
  cap.authorizor,
  cap.num_students,
  cap.beg_age,
  cap.end_age,
  cap.loi_required,
  cap.loi_deadline,
  cap.loi_submitted,
  cap.loi,
  cap.odds_authorization,
  cap.odds_on_time_open,
  cap.charter_app_roles_set,
  cap.charter_app_pm_plan_complete,
  cap.logic_model_complete,
  cap.comm_engagement_underway,
  cap.nonprofit_status as app_nonprofit_status,
  cap.app_deadline,
  cap.app_submitted,
  cap.joint_kickoff_meeting_date,
  cap.internal_support_meeting_date,
  cap.app_walkthrough_date,
  cap.capacity_intv_training_complete,
  cap.capacity_intv_proj_date,
  cap.capacity_intv_completed_date,
  cap.auth_decision,
  cap.design_advice_session_complete,
  cap.board_membership_signed_date,
  cap.design_album,
  cap.budget_exercises,
  cap.budget_final,
  cap.most_recent_app,
  cap.app_status,
  cap.team,
  cap.opps_challenges,
  cap.decision_expected_date,
  cauth.authorizer_name,
  cauth.active,
  caa.action_date,
  caa.action,
  caa.authorized_after_action as currently_authorized,
  odr.proj_open_date,
  ms.membership_status_after_action as membership_status,
  ge.group_exemption_status_after_action as group_exemption_status,
  gsum.total_grants_issued,
  lsum.total_loans_issued,
  coh.cohort_name as current_cohort,
  loc_phys.address as physical_address,
  loc_phys.lat as physical_lat,
  loc_phys.long as physical_long,
  loc_mail.address as mailing_address,
  loc_mail.lat as mailing_lat,
  loc_mail.long as mailing_long
from
  charters c
  left join lateral (
    select
      ca.target_open,
      ca.support_timeline,
      ca.app_window,
      ca.key_dates,
      ca.milestones,
      ca.authorizor,
      ca.num_students,
      ca.beg_age,
      ca.end_age,
      ca.loi_required,
      ca.loi_deadline,
      ca.loi_submitted,
      ca.loi,
      ca.odds_authorization,
      ca.odds_on_time_open,
      ca.charter_app_roles_set,
      ca.charter_app_pm_plan_complete,
      ca.logic_model_complete,
      ca.comm_engagement_underway,
      ca.nonprofit_status,
      ca.app_deadline,
      ca.app_submitted,
      ca.joint_kickoff_meeting_date,
      ca.internal_support_meeting_date,
      ca.app_walkthrough_date,
      ca.capacity_intv_training_complete,
      ca.capacity_intv_proj_date,
      ca.capacity_intv_completed_date,
      ca.auth_decision,
      ca.design_advice_session_complete,
      ca.board_membership_signed_date,
      ca.design_album,
      ca.budget_exercises,
      ca.budget_final,
      ca.most_recent_app,
      ca.app_status,
      ca.team,
      ca.opps_challenges,
      ca.decision_expected_date
    from
      charter_applications ca
    where
      ca.charter_id = c.id
    order by
      ca.app_submitted desc nulls last
    limit
      1
  ) cap on true
  left join lateral (
    select
      cauth_1.authorizer_name,
      cauth_1.active
    from
      charter_authorizers cauth_1
    where
      cauth_1.charter_id = c.id
    order by
      cauth_1.active desc nulls last
    limit
      1
  ) cauth on true
  left join lateral (
    select
      caa_1.action_date,
      caa_1.action,
      caa_1.authorized_after_action
    from
      charter_authorization_actions caa_1
    where
      caa_1.charter_id = c.id
    order by
      (
        COALESCE(
          caa_1.action_date::timestamp with time zone,
          caa_1.created_at
        )
      ) desc nulls last,
      caa_1.id desc
    limit
      1
  ) caa on true
  left join lateral (
    select
      od.proj_open_date
    from
      open_date_revisions od
    where
      od.charter_id = c.id
    order by
      od.created_at desc nulls last
    limit
      1
  ) odr on true
  left join lateral (
    select
      ma.membership_status_after_action
    from
      membership_actions ma
    where
      ma.charter_id = c.id
    order by
      (
        COALESCE(
          ma.action_date::timestamp with time zone,
          ma.created_at
        )
      ) desc nulls last,
      ma.id desc
    limit
      1
  ) ms on true
  left join lateral (
    select
      gea.group_exemption_status_after_action
    from
      group_exemption_actions gea
    where
      gea.charter_id = c.id
    order by
      (
        COALESCE(
          gea.action_date::timestamp with time zone,
          gea.created_at
        )
      ) desc nulls last,
      gea.id desc
    limit
      1
  ) ge on true
  left join lateral (
    select
      COALESCE(sum(gr.amount), 0::numeric) as total_grants_issued
    from
      grants gr
    where
      (
        gr.charter_id = c.id
        or (
          gr.school_id in (
            select
              s2.id
            from
              schools s2
            where
              s2.charter_id = c.id
          )
        )
      )
      and gr.grant_status = 'Issued'::text
  ) gsum on true
  left join lateral (
    select
      COALESCE(sum(ln.amount_issued), 0::bigint)::numeric as total_loans_issued
    from
      loans ln
    where
      (
        ln.charter_id = c.id
        or (
          ln.school_id in (
            select
              s2.id
            from
              schools s2
            where
              s2.charter_id = c.id
          )
        )
      )
      and ln.issue_date is not null
  ) lsum on true
  left join lateral (
    select
      cp.cohort as cohort_name
    from
      cohort_participation cp
    where
      cp.charter_id = c.id
      and (
        cp.participation_status = any (array['Active'::text, 'Complete'::text])
      )
    order by
      cp.created_at desc nulls last
    limit
      1
  ) coh on true
  left join lateral (
    select
      l.address,
      l.lat,
      l.long
    from
      locations l
    where
      l.charter_id = c.id
      and COALESCE(l.current_physical_address, false) = true
    limit
      1
  ) loc_phys on true
  left join lateral (
    select
      l.address,
      l.lat,
      l.long
    from
      locations l
    where
      l.charter_id = c.id
      and COALESCE(l.current_mail_address, false) = true
    limit
      1
  ) loc_mail on true;



create view public.details_educators as
select
  p.id,
  p.full_name,
  p.first_name,
  p.nickname,
  p.middle_name,
  p.last_name,
  p.primary_phone,
  p.primary_phone_other_info,
  p.secondary_phone,
  p.secondary_phone_other_info,
  p.home_address,
  p.educ_attainment,
  p.primary_languages,
  p.other_languages,
  ge.race_ethnicity_display,
  p.race_ethnicity_other,
  p.gender,
  p.gender_other,
  p.hh_income,
  p.childhood_income,
  p.lgbtqia,
  p.pronouns,
  p.pronouns_other,
  p.indiv_type,
  p.exclude_from_email_logging,
  peec.discovery_status,
  peec.assigned_partner,
  peec.educator_notes_1,
  peec.first_contact_ages,
  peec.first_contact_governance_model,
  peec.first_contact_interests,
  peec.first_contact_notes_on_pre_wf_employment,
  peec.first_contact_wf_employment_status,
  peec.first_contact_willingness_to_relocate,
  peec.first_contact_form_notes,
  peec.target_geo_combined,
  peec.self_reflection_doc,
  peec.opsguide_checklist,
  peec.opsguide_fundraising_opps,
  peec.opsguide_meeting_prefs,
  peec.opsguide_request_pertinent_info,
  peec.opsguide_support_type_needed,
  peec.sendgrid_template_selected,
  peec.sendgrid_send_date,
  peec.routed_to,
  peec.assigned_partner_override,
  peec.person_responsible_for_follow_up,
  peec.one_on_one_scheduling_status,
  peec.personal_email_sent,
  peec.personal_email_sent_date,
  ge.current_role_at_active_school,
  ge."current_role",
  ge.active_school,
  ge.has_montessori_cert,
  ge.kanban_group,
  ge.kanban_order,
  mc.cert_summary as mont_cert_summary,
  pe.email_address as primary_email,
  ssj.most_recent_fillout_form_date,
  ev.most_recent_event_name,
  ev.most_recent_event_date,
  nt.most_recent_note,
  nt.most_recent_note_date,
  nt.most_recent_note_from
from
  people p
  left join people_educator_early_cultivation peec on peec.people_id = p.id
  left join grid_educator ge on ge.id = p.id
  left join mont_certs_complete_summary mc on mc.people_id = p.id
  left join primary_emails pe on pe.people_id = p.id
  left join lateral (
    select
      max(sf.created_date) as most_recent_fillout_form_date
    from
      ssj_fillout_forms sf
    where
      sf.people_id = p.id
  ) ssj on true
  left join lateral (
    select
      el.event_name as most_recent_event_name,
      el.event_date as most_recent_event_date
    from
      event_attendance ea
      join event_list el on el.id = ea.event_id
    where
      ea.people_id = p.id
      and COALESCE(ea.attended_event, false) = true
    order by
      el.event_date desc nulls last
    limit
      1
  ) ev on true
  left join lateral (
    select
      n.text as most_recent_note,
      n.created_date as most_recent_note_date,
      n.created_by as most_recent_note_from
    from
      notes n
    where
      n.people_id = p.id
    order by
      n.created_date desc nulls last
    limit
      1
  ) nt on true;

create view public.details_schools as
select
  s.id,
  s.long_name,
  s.short_name,
  s.status,
  s.governance_model,
  s.prior_names,
  s.narrative,
  s.institutional_partner,
  s.ages_served,
  s.logo,
  s.logo_url,
  s.school_calendar,
  s.school_sched,
  s.planning_album,
  s.school_email,
  s.email_domain,
  s.school_phone,
  s.facebook,
  s.instagram,
  s.website,
  s.number_of_classrooms,
  s.pod,
  s.enrollment_at_full_capacity,
  s.flexible_tuition_model,
  s.ein,
  s.legal_name,
  s.about,
  s.about_spanish,
  s.risk_factors,
  s.watchlist,
  s.program_focus,
  s.loan_report_name,
  s.current_fy_end,
  s.incorporation_date,
  s.guidestar_listing_requested,
  s.nondiscrimination_policy_on_application,
  s.nondiscrimination_policy_on_website,
  s.qbo_school_codes,
  s.membership_termination_steps,
  s.legal_structure,
  s.open_date,
  s.charter_id,
  s.public_funding,
  s.founding_tls,
  s.on_national_website,
  s.domain_name,
  s.nonprofit_status,
  s.google_voice,
  s.website_tool,
  s.budget_utility,
  s.transparent_classroom,
  s.admissions_system,
  s.tc_admissions,
  s.tc_recordkeeping,
  s.gusto,
  s.qbo,
  s.business_insurance,
  s.bill_account,
  s.google_workspace_org_unit_path,
  s.budget_link,
  s.bookkeeper_or_accountant,
  ssj.ssj_target_city,
  ssj.ssj_target_state,
  ssj.entered_visioning_date,
  ssj.entered_planning_date,
  ssj.entered_startup_date,
  ssj.ssj_stage,
  ssj.ssj_readiness_to_open_rating,
  ssj.ssj_name_reserved,
  ssj.ssj_has_partner,
  ssj.ssj_board_development,
  ssj.ssj_facility,
  ssj.ssj_on_track_for_enrollment,
  ssj.ssj_budget_ready_for_next_steps,
  ssj.ssj_seeking_wf_funding,
  ssj.ssj_advice_givers_tls,
  ssj.ssj_advice_givers_partners,
  ssj.ssj_fundraising_narrative,
  ssj.ssj_pathway_to_funding,
  ssj.ssj_total_startup_funding_needed,
  ssj.ssj_loan_eligibility,
  ssj.ssj_loan_approved_amt,
  ssj.ssj_amount_raised,
  ssj.ssj_gap_in_funding,
  ssj.ssj_date_shared_with_n4g,
  ssj.ssj_proj_open_school_year,
  ssj.ssj_tool,
  ssj.ssj_building4good_status,
  ssj.building4good_firm_and_attorney,
  ssj.visioning_album_complete,
  ssj.visioning_album,
  ssj.logo_designer,
  ssj.name_selection_proposal,
  ssj.trademark_filed,
  ssj.ssj_ops_guide_support_track,
  m.membership_status_after_action as membership_status,
  odr.proj_open_date as projected_open,
  loc_phys.address as physical_address,
  loc_phys.lat as physical_lat,
  loc_phys.long as physical_long,
  loc_mail.address as mailing_address,
  coh.cohort_name as current_cohort,
  ga.current_guide_name,
  gsum.total_grants_issued,
  lsum.total_loans_issued
from
  schools s
  left join school_ssj_data ssj on ssj.school_id = s.id
  left join lateral (
    select
      ma.membership_status_after_action,
      ma.action_date as date
    from
      membership_actions ma
    where
      ma.school_id = s.id
    order by
      ma.action_date desc nulls last,
      (
        case
          when ma.action = 'Withdrew from Network'::membership_action_options then 2
          when ma.action = 'Signed Membership Agreement'::membership_action_options then 1
          else 0
        end
      ) desc,
      ma.id desc
    limit
      1
  ) m on true
  left join lateral (
    select
      od.proj_open_date
    from
      open_date_revisions od
    where
      od.school_id = s.id
    order by
      od.created_at desc nulls last
    limit
      1
  ) odr on true
  left join lateral (
    select
      l.address,
      l.lat,
      l.long
    from
      locations l
    where
      l.school_id = s.id
      and l.current_physical_address = true
    limit
      1
  ) loc_phys on true
  left join lateral (
    select
      l.address,
      l.lat,
      l.long
    from
      locations l
    where
      l.school_id = s.id
      and COALESCE(l.current_mail_address, false) = true
    limit
      1
  ) loc_mail on true
  left join lateral (
    select
      cp.cohort as cohort_name
    from
      cohort_participation cp
    where
      cp.school_id = s.id
      and (
        cp.participation_status = any (array['Active'::text, 'Complete'::text])
      )
    order by
      cp.created_at desc nulls last
    limit
      1
  ) coh on true
  left join lateral (
    select
      g.full_name as current_guide_name
    from
      guide_assignments ga_1
      join guides g on g.id = ga_1.guide_id
    where
      ga_1.school_id = s.id
      and ga_1.active = true
    order by
      (COALESCE(ga_1.end_date, ga_1.start_date)) desc nulls last,
      ga_1.id desc
    limit
      1
  ) ga on true
  left join lateral (
    select
      COALESCE(sum(gr.amount), 0::numeric) as total_grants_issued
    from
      grants gr
    where
      gr.school_id = s.id
      and gr.grant_status = 'Issued'::text
  ) gsum on true
  left join lateral (
    select
      COALESCE(sum(ln.amount_issued), 0::bigint)::numeric as total_loans_issued
    from
      loans ln
    where
      ln.school_id = s.id
      and ln.issue_date is not null
  ) lsum on true;

create view public.grid_charter as
select
  c.id,
  COALESCE(c.short_name, c.full_name) as charter_name,
  c.status,
  c.non_tl_roles,
  c.initial_target_geo,
  c.initial_target_planes,
  odr.proj_open_date as proj_open
from
  charters c
  left join lateral (
    select
      od.proj_open_date
    from
      open_date_revisions od
    where
      od.charter_id = c.id
    order by
      od.created_at desc nulls last
    limit
      1
  ) odr on true;

create view public.grid_educator as
select
  p.id,
  p.full_name,
  roa.current_role_at_active_school,
  roa."current_role",
  roa.active_school,
  (
    exists (
      select
        1
      from
        montessori_certs mc
      where
        mc.people_id = p.id
    )
  ) as has_montessori_cert,
  map_race_ethnicity (p.race_ethnicity) as race_ethnicity_display,
  peec.discovery_status::text as discovery_status,
  p.indiv_type,
  case
    when st.any_paused then 'paused'::text
    when st.any_open then 'open'::text
    when st.any_year1 then 'year 1'::text
    when st.any_startup then 'startup'::text
    when st.any_planning then 'planning'::text
    when st.any_visioning then 'visioning'::text
    when COALESCE(peec.discovery_status::text, ''::text) ~~* 'complete%'::text then 'discovery_complete'::text
    when COALESCE(peec.discovery_status::text, ''::text) ~~* 'in process%'::text then 'discovery_in_process'::text
    when f.any_1on1_completed then '1:1 completed'::text
    when f.any_1on1_scheduled then '1:1 scheduled'::text
    when f.any_outreach_sent then 'outreach_sent'::text
    when f.any_partner_assigned then 'partner_assigned'::text
    when f.any_inquiry then 'inquiry_received'::text
    else 'no_inquiry_received'::text
  end as kanban_group,
  case
    when st.any_paused then 14
    when st.any_open then 13
    when st.any_year1 then 12
    when st.any_startup then 11
    when st.any_planning then 10
    when st.any_visioning then 9
    when COALESCE(peec.discovery_status::text, ''::text) ~~* 'complete%'::text then 8
    when COALESCE(peec.discovery_status::text, ''::text) ~~* 'in process%'::text then 7
    when f.any_1on1_completed then 6
    when f.any_1on1_scheduled then 5
    when f.any_outreach_sent then 4
    when f.any_partner_assigned then 3
    when f.any_inquiry then 2
    else 1
  end as kanban_order
from
  people p
  left join people_educator_early_cultivation peec on peec.people_id = p.id
  left join lateral (
    select
      string_agg(
        x.s,
        ', '::text
        order by
          x.s
      ) as current_role_at_active_school,
      string_agg(
        distinct x.role,
        ', '::text
        order by
          x.role
      ) as "current_role",
      string_agg(
        distinct x.school_name,
        ', '::text
        order by
          x.school_name
      ) as active_school
    from
      (
        select distinct
          pra.role,
          COALESCE(s.short_name, s.long_name, s.legal_name, ''::text) as school_name,
          concat(
            pra.role,
            ' at ',
            COALESCE(s.short_name, s.long_name, s.legal_name, ''::text),
            ' (',
            case
              when s.status::text = 'Emerging'::text then COALESCE(ssj.ssj_stage::text, 'Emerging'::text)
              when s.status::text = 'Paused'::text then 'Paused'::text
              else s.status::text
            end,
            ')'
          ) as s
        from
          people_roles_associations pra
          join ref_roles rls on rls.role_short = pra.role
          and rls.show_in_educator_grid is true
          left join schools s on s.id = pra.school_id
          left join school_ssj_data ssj on ssj.school_id = s.id
        where
          pra.people_id = p.id
          and pra.currently_active is true
      ) x
  ) roa on true
  left join lateral (
    select
      bool_or(s.status::text = 'Paused'::text) as any_paused,
      bool_or(s.status::text = 'Open'::text) as any_open,
      bool_or(s.status::text = 'Year 1'::text) as any_year1,
      bool_or(
        s.status::text = 'Emerging'::text
        and ssj.ssj_stage::text = 'Startup'::text
      ) as any_startup,
      bool_or(
        s.status::text = 'Emerging'::text
        and ssj.ssj_stage::text = 'Planning'::text
      ) as any_planning,
      bool_or(
        s.status::text = 'Emerging'::text
        and ssj.ssj_stage::text = 'Visioning'::text
      ) as any_visioning
    from
      people_roles_associations pra
      join ref_roles rls on rls.role_short = pra.role
      and rls.show_in_educator_grid is true
      left join schools s on s.id = pra.school_id
      left join school_ssj_data ssj on ssj.school_id = s.id
    where
      pra.people_id = p.id
      and pra.currently_active is true
  ) st on true
  left join lateral (
    select
      bool_or(
        COALESCE(f_1.one_on_one_status, ''::text) ~~* 'Completed%'::text
      ) as any_1on1_completed,
      bool_or(
        COALESCE(f_1.one_on_one_status, ''::text) ~~* 'Scheduled%'::text
      ) as any_1on1_scheduled,
      bool_or(
        COALESCE(f_1.email_sent_by_initial_outreacher, ''::text) <> ''::text
      ) as any_outreach_sent,
      bool_or(COALESCE(f_1.routed_to, ''::text) <> ''::text) as any_partner_assigned,
      count(*) > 0 as any_inquiry
    from
      ssj_fillout_forms f_1
    where
      f_1.people_id = p.id
  ) f on true;

create view public.grid_school as
select
  s.id,
  COALESCE(s.short_name, s.long_name) as school_name,
  case
    when s.status::text = 'Emerging'::text then ssj.ssj_stage::text
    when s.status::text = 'Paused'::text then 'Paused'::text
    else s.status::text
  end as stage_status,
  (
    select
      string_agg(
        distinct p2.full_name,
        ', '::text
        order by
          p2.full_name
      ) as string_agg
    from
      people_roles_associations pra2
      join people p2 on p2.id = pra2.people_id
    where
      pra2.school_id = s.id
      and pra2.currently_active is true
      and (
        pra2.role = 'TL'::text
        or pra2.role = 'ETL'::text
      )
  ) as current_tls,
  m.membership_status_after_action as membership_status,
  odr.proj_open_date as projected_open,
  array_to_string(s.ages_served, ', '::text) as all_ages_served,
  s.governance_model
from
  schools s
  left join school_ssj_data ssj on ssj.school_id = s.id
  left join lateral (
    select
      ma.membership_status_after_action,
      ma.action_date as date
    from
      membership_actions ma
    where
      ma.school_id = s.id
    order by
      ma.action_date desc nulls last,
      (
        case
          when ma.action = 'Withdrew from Network'::membership_action_options then 3
          when ma.action = 'Sent Termination Letter'::membership_action_options then 2
          when ma.action = 'Signed Membership Agreement'::membership_action_options then 1
          else 0
        end
      ) desc,
      ma.id desc
    limit
      1
  ) m on true
  left join lateral (
    select
      od.proj_open_date
    from
      open_date_revisions od
    where
      od.school_id = s.id
    order by
      od.created_at desc nulls last
    limit
      1
  ) odr on true;

create view public.mont_certs_complete_summary as
select
  p.full_name,
  p.id as people_id,
  string_agg(
    (
      (
        (
          (
            (
              COALESCE(m.association::text, ''::text) || ' '::text
            ) || COALESCE(
              array_to_string(
                COALESCE(m.cert_level, array[]::age_spans[]),
                ', '::text
              ),
              ''::text
            )
          ) || ' '::text
        ) || '('::text
      ) || COALESCE(m.year, '?'::text)
    ) || ')'::text,
    ', '::text
    order by
      m.year
  ) as cert_summary
from
  montessori_certs m
  join people p on p.id = m.people_id
where
  m.cert_completion_status = 'Certified'::certification_completion_status
group by
  p.full_name,
  p.id;

create view public.primary_emails as
with
  email_candidates as (
    select
      prj.people_id,
      prj.role_specific_email as email_address,
      'school'::text as source,
      'school'::email_address_categories as category,
      1 as priority
    from
      people_roles_associations prj
    where
      prj.role_specific_email is not null
    union all
    select
      ea.people_id as person_id,
      ea.email_address,
      'primary'::text as source,
      ea.category,
      case
        when ea.category = 'personal'::email_address_categories then 2
        else 3
      end as priority
    from
      email_addresses ea
    where
      ea."primary" = true
    union all
    select
      ea.people_id,
      ea.email_address,
      'fallback'::text as source,
      ea.category,
      case
        when ea.category = 'personal'::email_address_categories then 4
        else 5
      end as priority
    from
      email_addresses ea
    where
      ea.email_address is not null
  ),
  ranked_emails as (
    select
      email_candidates.people_id,
      email_candidates.email_address,
      email_candidates.source,
      email_candidates.category,
      email_candidates.priority,
      row_number() over (
        partition by
          email_candidates.people_id
        order by
          email_candidates.priority
      ) as rn
    from
      email_candidates
  )
select
  ranked_emails.people_id,
  ranked_emails.email_address,
  ranked_emails.category
from
  ranked_emails
where
  ranked_emails.rn = 1;
