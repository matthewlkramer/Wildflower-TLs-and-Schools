-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.action_step_prompts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_step_id uuid NOT NULL,
  field_name text NOT NULL,
  old_value timestamp with time zone,
  proposed_value timestamp with time zone NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'applied'::text, 'dismissed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT action_step_prompts_pkey PRIMARY KEY (id),
  CONSTRAINT action_step_prompts_fk FOREIGN KEY (action_step_id) REFERENCES public.action_steps(id)
);
CREATE TABLE public.action_steps (
  item text,
  assignee text,
  item_status USER-DEFINED,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  entity_id uuid,
  assigned_date date,
  due_date date,
  completed_date date,
  people_id uuid,
  school_id uuid,
  charter_id uuid,
  CONSTRAINT action_steps_pkey PRIMARY KEY (id),
  CONSTRAINT action_steps_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id),
  CONSTRAINT action_steps_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT action_steps_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.annual_assessment_and_metrics_data (
  school_year text,
  assessment_or_metric text,
  metric_data text,
  assessed_total smallint,
  assessed_bipoc smallint,
  assessed_frl smallint,
  assessed_ell smallint,
  assessed_sped smallint,
  met_plus_total smallint,
  met_plus_bipoc smallint,
  met_plus_frl smallint,
  met_plus_ell smallint,
  met_plus_sped smallint,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  charter_id uuid,
  school_id uuid,
  CONSTRAINT annual_assessment_and_metrics_data_pkey PRIMARY KEY (id),
  CONSTRAINT annual_assessment_and_metrics_data_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT annual_assessment_and_metrics_data_school_year_fkey FOREIGN KEY (school_year) REFERENCES public.ref_school_years(school_year),
  CONSTRAINT annual_assessment_and_metrics_data_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.annual_enrollment_and_demographics (
  school_year text,
  enrolled_students_total smallint,
  enrolled_frl smallint,
  enrolled_bipoc smallint,
  enrolled_ell smallint,
  enrolled_sped smallint,
  charter_id uuid,
  school_id uuid,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  CONSTRAINT annual_enrollment_and_demographics_pkey PRIMARY KEY (id),
  CONSTRAINT annual_enrollment_and_demographics_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT annual_enrollment_and_demographics_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT annual_enrollment_and_demographics_school_year_fkey FOREIGN KEY (school_year) REFERENCES public.ref_school_years(school_year)
);
CREATE TABLE public.charter_applications (
  old_id text,
  target_open text,
  support_timeline text,
  app_window text,
  key_dates text,
  milestones text,
  authorizor text,
  num_students integer,
  beg_age USER-DEFINED,
  end_age USER-DEFINED,
  loi_required boolean,
  loi_deadline text,
  loi_submitted boolean,
  loi text,
  odds_authorization text,
  odds_on_time_open text,
  charter_app_roles_set boolean,
  charter_app_pm_plan_complete boolean,
  logic_model_complete boolean,
  comm_engagement_underway boolean,
  nonprofit_status text,
  app_deadline date,
  app_submitted boolean,
  joint_kickoff_meeting_date date,
  internal_support_meeting_date date,
  app_walkthrough_date date,
  capacity_intv_training_complete boolean,
  capacity_intv_proj_date date,
  capacity_intv_completed_date date,
  auth_decision USER-DEFINED,
  design_advice_session_complete boolean,
  board_membership_signed_date date,
  design_album text,
  budget_exercises text,
  budget_final text,
  most_recent_app boolean,
  app_status USER-DEFINED,
  team text,
  opps_challenges text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  charter_id uuid,
  decision_expected_date date,
  CONSTRAINT charter_applications_pkey PRIMARY KEY (id),
  CONSTRAINT charter_applications_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.charter_authorization_actions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  charter_id uuid,
  action text,
  authorized_after_action boolean,
  action_date date,
  authorizer_id uuid,
  CONSTRAINT charter_authorization_actions_pkey PRIMARY KEY (id),
  CONSTRAINT authorization_actions_authorizer_id_fkey FOREIGN KEY (authorizer_id) REFERENCES public.charter_authorizers(id)
);
CREATE TABLE public.charter_authorizers (
  authorizer_name text,
  active boolean NOT NULL,
  charter_id uuid NOT NULL,
  id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  CONSTRAINT charter_authorizers_pkey PRIMARY KEY (active, charter_id, id)
);
CREATE TABLE public.charters (
  old_id text NOT NULL,
  short_name text,
  full_name text,
  initial_target_geo text,
  landscape_analysis text,
  application text,
  non_tl_roles text,
  cohorts ARRAY,
  status text,
  ein text CHECK (ein IS NULL OR ein ~ '^\d{2}-\d{7}$'::text),
  incorp_date date,
  current_fy_end USER-DEFINED,
  non_discrimination_policy_on_website boolean,
  school_provided_1023 boolean,
  guidestar_listing_requested boolean,
  partnership_with_wf text,
  first_site_opened_date date,
  website text,
  nonprofit_status boolean,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  initial_target_planes ARRAY,
  CONSTRAINT charters_pkey PRIMARY KEY (id)
);
CREATE TABLE public.cohort_participation (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  people_id uuid,
  school_id uuid,
  charter_id uuid,
  cohort text,
  participation_status text,
  CONSTRAINT cohort_participation_pkey PRIMARY KEY (id),
  CONSTRAINT cohort_participation_cohort_fkey FOREIGN KEY (cohort) REFERENCES public.cohorts(cohort_title)
);
CREATE TABLE public.cohorts (
  cohort_type text,
  start_date date,
  cohort_title text NOT NULL DEFAULT (((((cohort_type || ' '::text) || (ARRAY['Jan'::text, 'Feb'::text, 'Mar'::text, 'Apr'::text, 'May'::text, 'Jun'::text, 'Jul'::text, 'Aug'::text, 'Sep'::text, 'Oct'::text, 'Nov'::text, 'Dec'::text])[(EXTRACT(month FROM start_date))::integer]) || '-'::text) || ((EXTRACT(year FROM start_date))::integer)::text) COLLATE "C") UNIQUE,
  CONSTRAINT cohorts_pkey PRIMARY KEY (cohort_title)
);
CREATE TABLE public.email_addresses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  people_id uuid,
  email_address text NOT NULL UNIQUE,
  category USER-DEFINED,
  primary boolean,
  CONSTRAINT email_addresses_pkey PRIMARY KEY (id),
  CONSTRAINT email_addresses_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id)
);
CREATE TABLE public.email_drafts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  to_emails ARRAY DEFAULT '{}'::text[],
  cc_emails ARRAY DEFAULT '{}'::text[],
  bcc_emails ARRAY DEFAULT '{}'::text[],
  subject text,
  body text,
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT email_drafts_pkey PRIMARY KEY (id)
);
CREATE TABLE public.event_attendance (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  people_id uuid,
  event_id uuid,
  registration_date date,
  attended_event boolean,
  duration_at_event_in_minutes smallint,
  spanish_translation_needed boolean,
  CONSTRAINT event_attendance_pkey PRIMARY KEY (id),
  CONSTRAINT event_attendance_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id),
  CONSTRAINT event_attendance_event_id_fkey FOREIGN KEY (event_id) REFERENCES public.event_list(id)
);
CREATE TABLE public.event_list (
  event_name text NOT NULL UNIQUE,
  event_date date,
  type text,
  id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  CONSTRAINT event_list_pkey PRIMARY KEY (id),
  CONSTRAINT event_list_type_fkey FOREIGN KEY (type) REFERENCES public.ref_event_types(event_type)
);
CREATE TABLE public.governance_docs (
  doc_type text,
  pdf text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  charter_id uuid,
  CONSTRAINT governance_docs_pkey PRIMARY KEY (id),
  CONSTRAINT governance_docs_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT governance_docs_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.grants (
  actual_tls text,
  actual_school_legal_name text,
  actual_mailing_address text,
  actual_tl_emails text,
  actual_ein text,
  actual_nonprofit_status text,
  actual_membership_status text,
  ready_to_accept_flag text,
  ready_to_issue_grant_letter_flag text,
  bill_account text,
  guide_first_name text,
  School Grant Name text,
  grant_status text,
  amount numeric,
  issue_date date,
  funding_source text,
  issued_by text,
  label text,
  accounting_notes text,
  qbo_number integer,
  notes text,
  ledger_entry text,
  funding_purpose text,
  funding_period text,
  actual_501c3_proof text,
  automation_step_trigger USER-DEFINED,
  prelim_advice_request_timestamp timestamp with time zone,
  full_advice_request_timestamp timestamp with time zone,
  end_of_full_advice_window text,
  unsigned_grant_agreement text,
  signed_grant_agreement text,
  grant_advice text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  charter_id uuid,
  people_id uuid,
  CONSTRAINT grants_pkey PRIMARY KEY (id),
  CONSTRAINT grants_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT grants_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id),
  CONSTRAINT grants_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.group_exemption_actions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  action_date date,
  action text,
  group_exemption_status_after_action USER-DEFINED,
  notes text,
  school_id uuid,
  charter_id uuid,
  CONSTRAINT group_exemption_actions_pkey PRIMARY KEY (id),
  CONSTRAINT group_exemption_actions_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT group_exemption_actions_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.guide_assignments (
  old_id text NOT NULL,
  start_date date,
  end_date date,
  type USER-DEFINED,
  active boolean,
  guide_id uuid,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  charter_id uuid,
  CONSTRAINT guide_assignments_pkey PRIMARY KEY (id),
  CONSTRAINT guide_assignments_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT guide_assignments_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT fk_guide_assignments_guide FOREIGN KEY (guide_id) REFERENCES public.guides(id)
);
CREATE TABLE public.guides (
  email_or_name text NOT NULL UNIQUE,
  old_id text,
  email text UNIQUE,
  currently_active boolean,
  phone text,
  home_address text,
  birthdate text,
  image_url text,
  full_name text,
  short_name text UNIQUE,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  partner_roles ARRAY,
  CONSTRAINT guides_pkey PRIMARY KEY (id)
);
CREATE TABLE public.lead_routing_and_templates (
  rule text NOT NULL UNIQUE,
  sendgrid_template_id text,
  language text,
  indiv_type text,
  us_or_intl text,
  geo_type text,
  states text,
  source text,
  growth_lead text,
  sender text,
  cc text,
  indiv_type_array ARRAY,
  language_array ARRAY,
  states_array ARRAY,
  us_or_intl_array ARRAY,
  CONSTRAINT lead_routing_and_templates_pkey PRIMARY KEY (rule),
  CONSTRAINT lead_routing_and_templates_growth_lead_fkey FOREIGN KEY (growth_lead) REFERENCES public.guides(email)
);
CREATE TABLE public.loans (
  Loan Key text,
  old_id text,
  amount_issued integer,
  issue_date date,
  loan_status USER-DEFINED,
  loan_docs text,
  notes text,
  maturity date,
  interest_rate real,
  use_of_proceeds USER-DEFINED,
  vehicle USER-DEFINED,
  school_id uuid,
  id uuid NOT NULL DEFAULT gen_random_uuid() UNIQUE,
  charter_id uuid,
  CONSTRAINT loans_pkey PRIMARY KEY (id),
  CONSTRAINT loans_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT loans_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.location_prompts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  location_id uuid NOT NULL,
  field_name text NOT NULL,
  old_value timestamp with time zone,
  proposed_value timestamp with time zone NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'applied'::text, 'dismissed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT location_prompts_pkey PRIMARY KEY (id),
  CONSTRAINT location_prompts_location_fk FOREIGN KEY (location_id) REFERENCES public.locations(id)
);
CREATE TABLE public.locations (
  charter_id uuid,
  current_mail_address boolean,
  current_physical_address boolean,
  start_date date,
  end_date date,
  co_location_type text,
  co_location_partner text,
  address text,
  street text,
  city text,
  state text,
  country text,
  zip text,
  neighborhood text,
  sq_ft smallint,
  max_students smallint,
  lat double precision,
  long double precision,
  created_datetime text,
  modified_datetime text,
  geocode_last_run_at text,
  census_tract text,
  qualified_low_income_tract boolean,
  lease text,
  lease_end_date date,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  mailable boolean,
  physical boolean,
  CONSTRAINT locations_pkey PRIMARY KEY (id),
  CONSTRAINT locations_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT locations_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.mailing_lists (
  sub_name text NOT NULL,
  name text,
  slug text,
  type text,
  google_group_id text NOT NULL UNIQUE,
  CONSTRAINT mailing_lists_pkey PRIMARY KEY (sub_name, google_group_id)
);
CREATE TABLE public.membership_actions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  action_date date DEFAULT now(),
  action USER-DEFINED,
  membership_status_after_action text,
  school_id uuid,
  attachments text,
  notes text,
  agreement_version text,
  charter_id uuid,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT membership_actions_pkey PRIMARY KEY (id),
  CONSTRAINT membership_actions_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT membership_actions_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT membership_actions_membership_status_after_action_fkey FOREIGN KEY (membership_status_after_action) REFERENCES public.ref_membership_statuses(status)
);
CREATE TABLE public.montessori_certs (
  year text CHECK (year IS NULL OR year ~ '^(19|20)[0-9]{2}$'::text),
  training_center text,
  trainer text,
  association USER-DEFINED,
  macte_accredited boolean,
  cert_completion_status USER-DEFINED,
  created_date date,
  cert_level ARRAY,
  admin_credential boolean,
  assistant_training boolean,
  people_id uuid,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  CONSTRAINT montessori_certs_pkey PRIMARY KEY (id),
  CONSTRAINT montessori_certs_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id)
);
CREATE TABLE public.nine_nineties (
  form_year text CHECK (form_year IS NULL OR form_year ~ '^[0-9]{4}$'::text AND form_year::integer >= 2000 AND form_year::integer <= 2100),
  link text,
  notes text,
  ai_derived_revenue text,
  ai_derived_EOY text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  charter_id uuid,
  pdf text,
  CONSTRAINT nine_nineties_pkey PRIMARY KEY (id),
  CONSTRAINT 990s_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT 990s_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.notes (
  text text,
  created_date date,
  created_by text,
  private boolean,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid,
  people_id uuid,
  charter_id uuid,
  CONSTRAINT notes_pkey PRIMARY KEY (id),
  CONSTRAINT school_notes_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id),
  CONSTRAINT school_notes_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT school_notes_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.open_date_revisions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  school_id uuid,
  proj_open_date date,
  prior_proj_open_date date,
  notes text,
  charter_id uuid,
  CONSTRAINT open_date_revisions_pkey PRIMARY KEY (id),
  CONSTRAINT open_date_revisions_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id),
  CONSTRAINT open_date_revisions_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.people (
  first_name text,
  middle_name text,
  last_name text,
  nickname text,
  primary_phone text CHECK (primary_phone IS NULL OR primary_phone ~ '^\+[1-9][0-9]{7,14}$'::text),
  secondary_phone text CHECK (secondary_phone IS NULL OR secondary_phone ~ '^\+[1-9][0-9]{7,14}$'::text),
  google_groups text,
  home_address text,
  source_other text,
  tc_userid text,
  educ_attainment USER-DEFINED,
  other_languages ARRAY,
  race_ethnicity_other text,
  hh_income USER-DEFINED,
  childhood_income USER-DEFINED,
  gender USER-DEFINED,
  gender_other text,
  lgbtqia boolean,
  pronouns USER-DEFINED,
  pronouns_other text,
  last_modified timestamp with time zone,
  created timestamp with time zone,
  indiv_type text,
  created_by text,
  tags text,
  exclude_from_email_logging boolean,
  id uuid NOT NULL,
  race_ethnicity ARRAY,
  source ARRAY,
  full_name text DEFAULT btrim(((COALESCE(NULLIF(nickname, ''::text), NULLIF(first_name, ''::text), ''::text) || ' '::text) || COALESCE(NULLIF(last_name, ''::text), ''::text))),
  primary_phone_other_info text,
  secondary_phone_other_info text,
  primary_languages ARRAY DEFAULT '{}'::languages[],
  CONSTRAINT people_pkey PRIMARY KEY (id)
);
CREATE TABLE public.people_educator_early_cultivation (
  old_id text NOT NULL,
  discovery_status USER-DEFINED,
  assigned_partner text,
  montessori_lead_guide_trainings text,
  educator_notes_1 text,
  training_grants text,
  on_school_board text,
  first_contact_willingness_to_relocate text,
  first_contact_governance_model text,
  first_contact_notes_on_pre_wf_employment text,
  first_contact_form_notes text,
  first_contact_wf_employment_status text,
  first_contact_ages text,
  first_contact_interests text,
  target_city text,
  target_state text,
  target_geo_combined text,
  target_intl text,
  self_reflection_doc text,
  opsguide_meeting_prefs text,
  opsguide_checklist text,
  opsguide_request_pertinent_info text,
  opsguide_support_type_needed text,
  opsguide_fundraising_opps text,
  people_id uuid NOT NULL,
  notes text,
  sendgrid_template_selected text,
  sendgrid_send_date date,
  routed_to text,
  assigned_partner_override text,
  person_responsible_for_follow_up text,
  one_on_one_scheduling_status text,
  personal_email_sent boolean,
  personal_email_sent_date date,
  CONSTRAINT people_educator_early_cultivation_pkey PRIMARY KEY (people_id),
  CONSTRAINT people_educator_details_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id)
);
CREATE TABLE public.people_roles_associations (
  role_specific_email text,
  loan_fund boolean,
  email_status USER-DEFINED,
  who_initiated_tl_removal text,
  gsuite_roles USER-DEFINED,
  currently_active boolean,
  school_id uuid,
  people_id uuid,
  id uuid NOT NULL,
  created_date date,
  start_date date,
  end_date date,
  role text,
  charter_id uuid,
  authorizer_id uuid,
  CONSTRAINT people_roles_associations_pkey PRIMARY KEY (id),
  CONSTRAINT people_roles_associations_role_fkey FOREIGN KEY (role) REFERENCES public.ref_roles(role_short),
  CONSTRAINT educatorsXschools_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id),
  CONSTRAINT people_roles_associations_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id),
  CONSTRAINT people_roles_join_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.people_systems (
  on_connected boolean,
  on_slack USER-DEFINED,
  in_tl_google_grp USER-DEFINED,
  in_wf_directory USER-DEFINED,
  who_initiated_tl_removal text,
  on_natl_website USER-DEFINED,
  gsuite_roles USER-DEFINED,
  people_id uuid,
  id uuid NOT NULL,
  CONSTRAINT people_systems_pkey PRIMARY KEY (id),
  CONSTRAINT people_systems_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id)
);
CREATE TABLE public.ref_boolean (
  category text NOT NULL,
  english text,
  spanish text,
  CONSTRAINT ref_boolean_pkey PRIMARY KEY (category)
);
CREATE TABLE public.ref_certifications (
  credential_level text NOT NULL,
  ages ARRAY,
  lead_guide_training boolean,
  admin_training boolean,
  synonyms ARRAY,
  CONSTRAINT ref_certifications_pkey PRIMARY KEY (credential_level)
);
CREATE TABLE public.ref_event_types (
  event_type text NOT NULL,
  CONSTRAINT ref_event_types_pkey PRIMARY KEY (event_type)
);
CREATE TABLE public.ref_gender (
  category text NOT NULL,
  english text,
  spanish text,
  CONSTRAINT ref_gender_pkey PRIMARY KEY (category)
);
CREATE TABLE public.ref_membership_agreement_versions (
  version text NOT NULL,
  start_date date,
  end_date date,
  CONSTRAINT ref_membership_agreement_versions_pkey PRIMARY KEY (version)
);
CREATE TABLE public.ref_membership_statuses (
  status text NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT ref_membership_statuses_pkey PRIMARY KEY (status)
);
CREATE TABLE public.ref_planes (
  plane text NOT NULL,
  credentials ARRAY,
  synonyms ARRAY,
  age_ranges ARRAY,
  age_spans USER-DEFINED,
  CONSTRAINT ref_planes_pkey PRIMARY KEY (plane)
);
CREATE TABLE public.ref_public_funding_sources (
  name text NOT NULL,
  description text,
  planes ARRAY,
  CONSTRAINT ref_public_funding_sources_pkey PRIMARY KEY (name)
);
CREATE TABLE public.ref_race_and_ethnicity (
  category text NOT NULL,
  english text,
  spanish text,
  english_short text,
  CONSTRAINT ref_race_and_ethnicity_pkey PRIMARY KEY (category)
);
CREATE TABLE public.ref_roles (
  role_long text NOT NULL UNIQUE,
  role_short text NOT NULL UNIQUE,
  contexts ARRAY,
  show_in_educator_grid boolean,
  CONSTRAINT ref_roles_pkey PRIMARY KEY (role_long, role_short)
);
CREATE TABLE public.ref_school_years (
  school_year text NOT NULL CHECK ("left"(school_year, 4)::integer = ((('20'::text || "right"(school_year, 2))::integer) - 1)),
  fiscal_year text DEFAULT ('FY'::text || "right"(school_year, 2)),
  starting_calendar_year text NOT NULL DEFAULT "left"(school_year, 4) UNIQUE,
  ending_calendar_year text NOT NULL DEFAULT (("left"(school_year, 2) || "right"(school_year, 2)) COLLATE "C") UNIQUE,
  start_date date DEFAULT make_date(("left"(school_year, 4))::integer, 7, 1),
  end_date date DEFAULT make_date((("left"(school_year, 4))::integer + 1), 6, 30),
  CONSTRAINT ref_school_years_pkey PRIMARY KEY (school_year)
);
CREATE TABLE public.school_reports_and_submissions (
  id text,
  charter_id uuid,
  report_type text,
  attachments text,
  school_year text,
  CONSTRAINT school_reports_and_submissions_school_year_fkey FOREIGN KEY (school_year) REFERENCES public.ref_school_years(school_year),
  CONSTRAINT school_reports_and_submissions_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.school_ssj_data (
  school_id uuid NOT NULL,
  ssj_target_city text,
  ssj_target_state USER-DEFINED,
  entered_visioning_date date,
  entered_planning_date date,
  entered_startup_date date,
  ssj_stage USER-DEFINED,
  ssj_readiness_to_open_rating USER-DEFINED,
  ssj_name_reserved boolean,
  ssj_has_partner USER-DEFINED,
  ssj_board_development USER-DEFINED,
  ssj_facility USER-DEFINED,
  ssj_on_track_for_enrollment USER-DEFINED,
  ssj_budget_ready_for_next_steps USER-DEFINED,
  ssj_seeking_wf_funding USER-DEFINED,
  ssj_advice_givers_tls text,
  ssj_advice_givers_partners text,
  ssj_fundraising_narrative text,
  ssj_pathway_to_funding USER-DEFINED,
  ssj_total_startup_funding_needed text,
  ssj_loan_eligibility text,
  ssj_loan_approved_amt text,
  ssj_amount_raised text,
  ssj_gap_in_funding text,
  ssj_date_shared_with_n4g date,
  ssj_proj_open_school_year text,
  ssj_tool USER-DEFINED,
  ssj_building4good_status USER-DEFINED,
  building4good_firm_and_attorney text,
  visioning_album_complete text,
  visioning_album text,
  logo_designer USER-DEFINED,
  name_selection_proposal text,
  trademark_filed boolean,
  ssj_ops_guide_support_track USER-DEFINED,
  CONSTRAINT school_ssj_data_pkey PRIMARY KEY (school_id),
  CONSTRAINT school_ssj_data_school_id_fkey FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.school_status_prompts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  school_id uuid NOT NULL,
  field_name text NOT NULL,
  old_value text,
  proposed_value text NOT NULL,
  status text NOT NULL DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['pending'::text, 'applied'::text, 'dismissed'::text])),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  resolved_at timestamp with time zone,
  CONSTRAINT school_status_prompts_pkey PRIMARY KEY (id),
  CONSTRAINT school_status_prompts_school_fk FOREIGN KEY (school_id) REFERENCES public.schools(id)
);
CREATE TABLE public.schools (
  long_name text,
  old_id text NOT NULL,
  short_name text,
  status USER-DEFINED,
  governance_model USER-DEFINED,
  prior_names text,
  narrative text,
  primary_contact_id text,
  institutional_partner text,
  ages_served ARRAY,
  logo_url text,
  logo text,
  school_calendar USER-DEFINED,
  planning_album text,
  tc_school_id text,
  school_email text,
  email_domain text,
  school_phone text,
  facebook text,
  instagram text,
  website text,
  on_national_website text,
  domain_name text,
  nonprofit_status text,
  google_voice text,
  website_tool text,
  budget_utility text,
  transparent_classroom text,
  admissions_system text,
  tc_admissions text,
  tc_recordkeeping text,
  gusto text,
  qbo text,
  business_insurance text,
  bill_account text,
  number_of_classrooms smallint,
  created date,
  created_by text,
  last_modified date,
  last_modified_by text,
  pod text,
  enrollment_at_full_capacity text,
  google_workspace_org_unit_path text,
  flexible_tuition_model text,
  ein text CHECK (ein IS NULL OR is_ein_format(ein) OR ein = 'N/A'::text),
  about text,
  about_spanish text,
  hero_image_url text,
  hero_image_2_url text,
  budget_link text,
  bookkeeper_or_accountant text,
  risk_factors text,
  watchlist text,
  program_focus text,
  loan_report_name text,
  current_fy_end text,
  incorporation_date text,
  guidestar_listing_requested text,
  legal_name text,
  nondiscrimination_policy_on_application text,
  nondiscrimination_policy_on_website text,
  qbo_school_codes text,
  membership_termination_steps text,
  automation_notes text,
  legal_structure text,
  open_date date,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  charter_id uuid,
  school_sched ARRAY,
  public_funding ARRAY,
  founding_tls ARRAY,
  CONSTRAINT schools_pkey PRIMARY KEY (id),
  CONSTRAINT schools_charter_id_fkey FOREIGN KEY (charter_id) REFERENCES public.charters(id)
);
CREATE TABLE public.sources (
  ref_sources text NOT NULL,
  CONSTRAINT sources_pkey PRIMARY KEY (ref_sources)
);
CREATE TABLE public.ssj_fillout_forms (
  old_id text,
  form_type USER-DEFINED,
  first_name text,
  last_name text,
  full_name text,
  email text,
  Link to Start a School text,
  race_ethnicity text,
  race_ethnicity_other text,
  lgbtqia text,
  pronouns text,
  pronouns_other text,
  gender text,
  gender_other text,
  current_income text,
  language_primary text,
  language_primary_other text,
  message text,
  charter_interest text,
  email_1 text,
  contact_type text,
  mont_cert_question text,
  cert_processing_status text,
  currently_montessori_certified text,
  currently_seeking_mont_cert text,
  Temp - M Cert Cert 1 text,
  Montessori Certification Certifier 1 text,
  Temp - M Cert Year 1 text,
  Montessori Certification Year 1 text,
  Temp - M Cert Level 1 text,
  Montessori Certification Level 1 text,
  Temp - M Cert Cert 2 text,
  Montessori Certification Certifier 2 text,
  Temp - M Cert Year 2 text,
  Montessori Certification Year 2 text,
  Temp - M Cert Level 2 text,
  Montessori Certification Level 2 text,
  Temp - M Cert Cert 3 text,
  Montessori Certification Certifier 3 text,
  Temp - M Cert Year 3 text,
  Montessori Certification Year 3 text,
  Temp - M Cert Level 3 text,
  Montessori Certification Level 3 text,
  Temp - M Cert Cert 4 text,
  Montessori Certification Certifier 4 text,
  Temp - M Cert Year 4 text,
  Montessori Certification Year 4 text,
  Temp - M Cert Level 4 text,
  Montessori Certification Level 4 text,
  city text,
  city_standardized text,
  state text,
  state_abbrev text,
  country text,
  city2 text,
  state2 text,
  country2 text,
  target_geo text,
  age_targets text,
  educator_interests text,
  educator_interests_other text,
  community_member_interest text,
  want_helping_sourcing_teachers text,
  community_desc text,
  community_member_self_description text,
  want_communications text,
  source_type text,
  source_other text,
  source_detail text,
  source_campaign text,
  created_date timestamp with time zone,
  sendgrid_template text,
  sendgrid_date_sent text,
  routed_to text,
  assigned_partner_override text,
  email_sent_by_initial_outreacher text,
  one_on_one_status text,
  initial_outreacher text,
  follow_upper text,
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  people_id uuid,
  CONSTRAINT ssj_fillout_forms_pkey PRIMARY KEY (id),
  CONSTRAINT ssj_fillout_forms_people_id_fkey FOREIGN KEY (people_id) REFERENCES public.people(id)
);